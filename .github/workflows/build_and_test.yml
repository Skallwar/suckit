name: Build and test

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Lint
      run: |
          rustup component add rustfmt
          cargo fmt -- --check || (echo "Please reformat your code with 'cargo
          fmt' (version $(cargo fmt --version))"; false)

  tests:
    needs: [lint]
    name: Tests ${{ matrix.target }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
        os:
          - ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install qemu-user-static
      if: ${{ matrix.target != 'x86_64-unknown-linux-gnu' }}
      run: |
        sudo apt update
        sudo apt install qemu-user-static

    - name: Rustup setup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        target: ${{ matrix.target }}

    - name: Install cross
      run:
          cargo install cross

    - name: Unit tests
      run: |
          cross test --locked --target ${{ matrix.target }}

  build:
    needs: [lint]

    name: Build ${{ matrix.target }}-${{ matrix.rust }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
        rust:
          - stable
          - 1.51.0
        os:
          - ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install qemu-user-static
      if: ${{ matrix.target != 'x86_64-unknown-linux-gnu' }}
      run: |
        sudo apt update
        sudo apt install qemu-user-static

    - name: Rustup setup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        default: true
        target: ${{ matrix.target }}

    - name: Install cross
      run:
          cargo install cross

    - name: Check
      run:
          cross check --locked --target ${{ matrix.target }}

    - name: Build
      run: |
          cross build --locked --target ${{ matrix.target }}
